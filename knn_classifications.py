# -*- coding: utf-8 -*-
"""KNN_classification.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1hn1yBBS7sdThIqx7-KCAcYOD3Lhmo4qN
"""

from google.colab import drive
drive.mount('/content/gdrive')

from numpy import genfromtxt
data_path = '/content/gdrive/MyDrive/KNN/iris.csv'
my_data = genfromtxt(data_path, delimiter=',')

#my_data.shape
type(my_data)

data = my_data.tolist()
for i in range(5):
  print(data[i])
type(data)

import numpy as np
import random
import math

Train_set = []
Val_set = [] 
Test_set = []
random.shuffle(data)
for S in data:
  R = random.uniform(0, 1)
  if R>=0 and R<=0.7:
   Train_set.append(S)
  elif R>0.7 and R<=0.85:
   Val_set.append(S)
  else:
   Test_set.append(S)

def mejority(count,count1,count2):
  if (count>count1 and count>count2):
    return 0
  elif (count1>count and count1>count2):
    return 1
  else:
    return 2

def knn_classification(data,Train_set,Val_set,Test_set):
  k = 5
  c_val = 0
  v_count = 0
  for v in Val_set:
    count = 0
    count1 = 0
    count2 = 0
    l = []
    for t in Train_set:
      a = np.array(v[:4])
      b = np.array(t[:4])
      distance = np.linalg.norm(a-b)
      tmp = [distance,t[-1]]
      l.append(tmp)
    l.sort()
    l1 = l[:k]
    for x in l1:
      if (x[-1] == 0):
        count+=1
      elif (x[-1] == 1):
        count1+=1
      else:
        count2+=1
    m = mejority(count,count1,count2)
    if (m == v[-1]):
      c_val+=1
    v_count+=1
  
  validation_accuracy = (c_val)/(v_count) * 100
  print(validation_accuracy)
      
knn_classification(data,Train_set,Val_set,Test_set)